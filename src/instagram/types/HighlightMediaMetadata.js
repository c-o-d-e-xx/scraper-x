/* Copyright (C) 2024 CODEX
Licensed under the MIT License;
you may not use this file except in compliance with the License.
scraper-x - Ziyan
*/


// Generated by https://quicktype.io

/** Instagram Simplified Highlights reels Metadata */
class IHighlightsMetadata {
    /**
     * @param {string} username - Instagram username
     * @param {number} highlights_count - Stories count
     * @param {IReelsMetadata[]} data - Array of reel metadata
     */
    constructor(username, highlights_count, data) {
        this.username = username;
        this.highlights_count = highlights_count;
        this.data = data;
    }
}

class IReelsMetadata {
    /**
     * @param {string} title
     * @param {string} cover
     * @param {number} media_count
     * @param {string} highlights_id
     * @param {ReelsMediaData[]} highlights
     */
    constructor(title, cover, media_count, highlights_id, highlights) {
        this.title = title;
        this.cover = cover;
        this.media_count = media_count;
        this.highlights_id = highlights_id;
        this.highlights = highlights;
    }
}

class ReelsMediaData {
    /**
     * @param {HighlightOwner} owner
     * @param {string} media_id
     * @param {string} mimetype
     * @param {number} taken_at
     * @param {string} type
     * @param {string} url - Downloadable media URL
     * @param {Dimensions} dimensions
     */
    constructor(owner, media_id, mimetype, taken_at, type, url, dimensions) {
        this.owner = owner;
        this.media_id = media_id;
        this.mimetype = mimetype;
        this.taken_at = taken_at;
        this.type = type;
        this.url = url;
        this.dimensions = dimensions;
    }
}

class HMedia {
    /**
     * @param {ReelsData} data
     * @param {string} status
     */
    constructor(data, status) {
        this.data = data;
        this.status = status;
    }
}

class ReelsData {
    /**
     * @param {ReelsMedia[]} reels_media
     */
    constructor(reels_media) {
        this.reels_media = reels_media;
    }
}

class ReelsMedia {
    /**
     * @param {string} __typename
     * @param {string} id
     * @param {null} latest_reel_media
     * @param {boolean} can_reply
     * @param {HighlightOwner} owner
     * @param {HighlightItem[]} items
     */
    constructor(__typename, id, latest_reel_media, can_reply, owner, items) {
        this.__typename = __typename;
        this.id = id;
        this.latest_reel_media = latest_reel_media;
        this.can_reply = can_reply;
        this.owner = owner;
        this.items = items;
    }
}

class HighlightItem {
    /**
     * @param {string} audience
     * @param {EdgeStoryMediaViewers} edge_story_media_viewers
     * @param {string} __typename
     * @param {string} id
     * @param {Dimensions} dimensions
     * @param {DisplayResource[]} display_resources
     * @param {string} display_url
     * @param {null | string} media_preview
     * @param {number} taken_at_timestamp
     * @param {number} expiring_at_timestamp
     * @param {boolean} is_video
     * @param {HighlightOwner} owner
     * @param {string} tracking_token
     * @param {VideoResource[]} video_resources
     */
    constructor(audience, edge_story_media_viewers, __typename, id, dimensions, display_resources, display_url, media_preview, taken_at_timestamp, expiring_at_timestamp, is_video, owner, tracking_token, video_resources) {
        this.audience = audience;
        this.edge_story_media_viewers = edge_story_media_viewers;
        this.__typename = __typename;
        this.id = id;
        this.dimensions = dimensions;
        this.display_resources = display_resources;
        this.display_url = display_url;
        this.media_preview = media_preview;
        this.taken_at_timestamp = taken_at_timestamp;
        this.expiring_at_timestamp = expiring_at_timestamp;
        this.is_video = is_video;
        this.owner = owner;
        this.tracking_token = tracking_token;
        this.video_resources = video_resources;
    }
}

class EdgeStoryMediaViewers {
    /**
     * @param {number} count
     * @param {PageInfo} page_info
     */
    constructor(count, page_info) {
        this.count = count;
        this.page_info = page_info;
    }
}

class HighlightOwner {
    /**
     * @param {string} id
     * @param {string} profile_pic_url
     * @param {string} username
     * @param {boolean} followed_by_viewer
     * @param {boolean} requested_by_viewer
     */
    constructor(id, profile_pic_url, username, followed_by_viewer, requested_by_viewer) {
        this.id = id;
        this.profile_pic_url = profile_pic_url;
        this.username = username;
        this.followed_by_viewer = followed_by_viewer;
        this.requested_by_viewer = requested_by_viewer;
    }
}

class VideoResource {
    /**
     * @param {string} src
     * @param {number} config_width
     * @param {number} config_height
     * @param {string} mime_type
     * @param {string} profile
     */
    constructor(src, config_width, config_height, mime_type, profile) {
        this.src = src;
        this.config_width = config_width;
        this.config_height = config_height;
        this.mime_type = mime_type;
        this.profile = profile;
    }
}

module.exports = {
    IHighlightsMetadata,
    IReelsMetadata,
    ReelsMediaData,
    HMedia,
    ReelsData,
    ReelsMedia,
    HighlightItem,
    EdgeStoryMediaViewers,
    HighlightOwner,
    VideoResource,
};
